///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Test
{
    /// <summary>
    ///The Launch recording.
    /// </summary>
    [TestModule("1b0de3fb-a9a9-4f59-9b54-350d7ac8e721", ModuleType.Recording, 1)]
    public partial class Launch : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TestRepository repository.
        /// </summary>
        public static TestRepository repo = TestRepository.Instance;

        static Launch instance = new Launch();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Launch()
        {
            fightType = "2";
            timeoutFight = "2";
            fighterCount = "2";
            fightLevelIndex = "3";
            defaultFightType = "2k";
            undressIfEmptySlot = "false";
            repairIfEmptySlot = "true";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Launch Instance
        {
            get { return instance; }
        }

#region Variables

        string _fightType;

        /// <summary>
        /// Gets or sets the value of variable fightType.
        /// </summary>
        [TestVariable("ead52ce3-77bb-4862-8861-00d999fb9819")]
        public string fightType
        {
            get { return _fightType; }
            set { _fightType = value; }
        }

        string _timeoutFight;

        /// <summary>
        /// Gets or sets the value of variable timeoutFight.
        /// </summary>
        [TestVariable("a4666285-6875-4b4a-92aa-4b75419b3280")]
        public string timeoutFight
        {
            get { return _timeoutFight; }
            set { _timeoutFight = value; }
        }

        string _fighterCount;

        /// <summary>
        /// Gets or sets the value of variable fighterCount.
        /// </summary>
        [TestVariable("74a1ed95-a73d-4780-b720-c42e8fd658d1")]
        public string fighterCount
        {
            get { return _fighterCount; }
            set { _fighterCount = value; }
        }

        string _fightLevelIndex;

        /// <summary>
        /// Gets or sets the value of variable fightLevelIndex.
        /// </summary>
        [TestVariable("1fe63382-52c9-4f75-b83c-320b972142a6")]
        public string fightLevelIndex
        {
            get { return _fightLevelIndex; }
            set { _fightLevelIndex = value; }
        }

        string _defaultFightType;

        /// <summary>
        /// Gets or sets the value of variable defaultFightType.
        /// </summary>
        [TestVariable("2dacf181-eead-45df-8a2c-24188c1098c1")]
        public string defaultFightType
        {
            get { return _defaultFightType; }
            set { _defaultFightType = value; }
        }

        string _undressIfEmptySlot;

        /// <summary>
        /// Gets or sets the value of variable undressIfEmptySlot.
        /// </summary>
        [TestVariable("33174093-f300-423c-82a7-2381fa373a09")]
        public string undressIfEmptySlot
        {
            get { return _undressIfEmptySlot; }
            set { _undressIfEmptySlot = value; }
        }

        string _repairIfEmptySlot;

        /// <summary>
        /// Gets or sets the value of variable repairIfEmptySlot.
        /// </summary>
        [TestVariable("e5068e0e-8e01-4743-a372-14e88d5ef7a1")]
        public string repairIfEmptySlot
        {
            get { return _repairIfEmptySlot; }
            set { _repairIfEmptySlot = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.2.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.2.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://www.combats.com/' with browser 'IE' in maximized mode.", new RecordItemIndex(0));
            Host.Local.OpenBrowser("http://www.combats.com/", "IE", "", false, true);
            Delay.Milliseconds(0);
            
            // логин
            Report.Log(ReportLevel.Info, "Keyboard", "логин\r\nKey sequence 'Дубинатор' with focus on 'БойцовскийКлуб.LoginForm.Login'.", repo.БойцовскийКлуб.LoginForm.LoginInfo, new RecordItemIndex(1));
            repo.БойцовскийКлуб.LoginForm.Login.PressKeys("Дубинатор");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to '***' on item 'БойцовскийКлуб.LoginForm.InputTagPsw'.", repo.БойцовскийКлуб.LoginForm.InputTagPswInfo, new RecordItemIndex(2));
            repo.БойцовскийКлуб.LoginForm.InputTagPsw.Element.SetAttributeValue("TagValue", "*****");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'БойцовскийКлуб.LoginForm.Submit'.", repo.БойцовскийКлуб.LoginForm.SubmitInfo, new RecordItemIndex(3));
            Validate.Exists(repo.БойцовскийКлуб.LoginForm.SubmitInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'БойцовскийКлуб.LoginForm.Submit' at Center.", repo.БойцовскийКлуб.LoginForm.SubmitInfo, new RecordItemIndex(4));
            repo.БойцовскийКлуб.LoginForm.Submit.Click();
            Delay.Milliseconds(200);
            
            Wait_For_Combats1();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'БойцовскийКлуб1.Menu.Combats1'.", repo.БойцовскийКлуб1.Menu.Combats1Info, new RecordItemIndex(6));
            //Validate.Exists(repo.БойцовскийКлуб1.Menu.Combats1Info);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'БойцовскийКлуб1.Menu.Combats1' at Center.", repo.БойцовскийКлуб1.Menu.Combats1Info, new RecordItemIndex(7));
            //repo.БойцовскийКлуб1.Menu.Combats1.Click();
            //Delay.Milliseconds(200);
            
            // выбор типа боя
            //Report.Log(ReportLevel.Info, "Validation", "выбор типа боя\r\nValidating Exists on item 'БойцовскийКлуб1.Menu.ATag1На1'.", repo.БойцовскийКлуб1.Menu.ATag1На1Info, new RecordItemIndex(8));
            //Validate.Exists(repo.БойцовскийКлуб1.Menu.ATag1На1Info);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'БойцовскийКлуб1.Menu.ATag1На1' at Center.", repo.БойцовскийКлуб1.Menu.ATag1На1Info, new RecordItemIndex(9));
            //repo.БойцовскийКлуб1.Menu.ATag1На1.Click();
            //Delay.Milliseconds(200);
            
            // подать заявку
            //Report.Log(ReportLevel.Info, "Validation", "подать заявку\r\nValidating Exists on item 'БойцовскийКлуб1.Menu.Open'.", repo.БойцовскийКлуб1.Menu.OpenInfo, new RecordItemIndex(10));
            //Validate.Exists(repo.БойцовскийКлуб1.Menu.OpenInfo);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'БойцовскийКлуб1.Menu.Open' at Center.", repo.БойцовскийКлуб1.Menu.OpenInfo, new RecordItemIndex(11));
            //repo.БойцовскийКлуб1.Menu.Open.Click();
            //Delay.Milliseconds(200);
            
            //WaitFight(ValueConverter.ArgumentFromString<int>("min", "35000"), ValueConverter.ArgumentFromString<int>("max", "65000"));
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
}
